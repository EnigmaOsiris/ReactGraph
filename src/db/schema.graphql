const {gql} = require('apollo-server');

const typeDefs = gql `
    type User{
        id:ID
        name:String
        lastName:String
        email:String
        createdAt:String
    }

    type Product{
        id:ID
        name:String
        exist: Int
        price: Float
    }

    type Order{
        id:ID
        order:[OrderGroup]
        total:Float
        client:ID
        seller:ID
        createdAt:String
        status: statusOrder
    }

    type OrderGroup{
        id:ID
        cant:Int
    }

    type Client{
        id:ID
        name:String
        lastName:String
        company:String
        email:String
        phone:String
        seller:ID
    }

    type Token{
        token:String
    }

    input ClientInput{
        name:String!
        lastName:String!
        company:String!
        email:String!
        phone:String
    }

    input UserInput{
        name: String!
        lastName: String!
        email: String!
        password: String!
    }

    input AuthInput{
        email:String!
        password:String!
    }

    input ProductInput {
        name:String!
        exist: Int!
        price:Float!
    }

    input orderProductInput{
        id:ID,
        cant: Int
    }

    input OrderInput{
        order:[orderProductInput]
        total:Float!
        client:ID!
        status: statusOrder
    }

    enum statusOrder{
        PENDING
        COMPLETED
        CANCELLED
    }

    type Query{
        #user
        getUser(token: String!):User
        #productos
        getProducts:[Product]
        getProduct(id:ID!):Product
        # clientes
        getAllClients:[Client]
        getClientsSeller:[Client]
        getClient(id:ID!):Client
        # orders
        getAllOrder:[Order]
        getOrderbySeller:[Order]
        getOrderbyId(id: ID!):Order
    }

    type Mutation{
        # usuario
        newUser(input: UserInput): User
        authUser(input: AuthInput):Token
        # productos
        newProduct(input:ProductInput):Product
        updateProduct(id:ID!, input: ProductInput):Product
        deleteProduct(id:ID!):String
        #clientes
        newClient(input: ClientInput):Client
        editClient(id:ID,input: ClientInput):Client
        deleteClient(id: ID):String
        #pedidos
        newOrder(input: OrderInput):String
        updateOrder(id:ID!, input:OrderInput):Order
    }
`;

module.exports = typeDefs;